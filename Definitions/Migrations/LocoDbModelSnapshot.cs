// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenLoco.Definitions.Database;

#nullable disable

namespace Definitions.Migrations
{
    [DbContext(typeof(LocoDb))]
    partial class LocoDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TblLocoObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TblLocoObjectPackId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TblSC5FileId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TblSC5FilePackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TblLocoObjectId");

                    b.HasIndex("TblLocoObjectPackId");

                    b.HasIndex("TblSC5FileId");

                    b.HasIndex("TblSC5FilePackId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Licences");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLocoObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Availability")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<uint>("DatChecksum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastEditDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LicenceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("ObjectType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceGame")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UploadDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime(datetime('now', 'localtime'), 'utc')");

                    b.Property<byte?>("VehicleType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LicenceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("DatName", "DatChecksum")
                        .IsUnique()
                        .IsDescending(true, false);

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLocoObjectPack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastEditDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LicenceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UploadDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime(datetime('now', 'localtime'), 'utc')");

                    b.HasKey("Id");

                    b.HasIndex("LicenceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ObjectPacks");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblSC5File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastEditDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LicenceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceGame")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UploadDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime(datetime('now', 'localtime'), 'utc')");

                    b.HasKey("Id");

                    b.HasIndex("LicenceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SC5Files");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblSC5FilePack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastEditDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LicenceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UploadDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime(datetime('now', 'localtime'), 'utc')");

                    b.HasKey("Id");

                    b.HasIndex("LicenceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SC5FilePacks");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TblLocoObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TblLocoObjectPackId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TblSC5FileId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TblSC5FilePackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TblLocoObjectId");

                    b.HasIndex("TblLocoObjectPackId");

                    b.HasIndex("TblSC5FileId");

                    b.HasIndex("TblSC5FilePackId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TblLocoObjectTblLocoObjectPack", b =>
                {
                    b.Property<int>("ObjectPacksId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ObjectsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ObjectPacksId", "ObjectsId");

                    b.HasIndex("ObjectsId");

                    b.ToTable("TblLocoObjectTblLocoObjectPack");
                });

            modelBuilder.Entity("TblSC5FileTblSC5FilePack", b =>
                {
                    b.Property<int>("SC5FilePacksId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SC5FilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SC5FilePacksId", "SC5FilesId");

                    b.HasIndex("SC5FilesId");

                    b.ToTable("TblSC5FileTblSC5FilePack");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblAuthor", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLocoObject", null)
                        .WithMany("Authors")
                        .HasForeignKey("TblLocoObjectId");

                    b.HasOne("OpenLoco.Definitions.Database.TblLocoObjectPack", null)
                        .WithMany("Authors")
                        .HasForeignKey("TblLocoObjectPackId");

                    b.HasOne("OpenLoco.Definitions.Database.TblSC5File", null)
                        .WithMany("Authors")
                        .HasForeignKey("TblSC5FileId");

                    b.HasOne("OpenLoco.Definitions.Database.TblSC5FilePack", null)
                        .WithMany("Authors")
                        .HasForeignKey("TblSC5FilePackId");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLocoObject", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLicence", "Licence")
                        .WithMany()
                        .HasForeignKey("LicenceId");

                    b.Navigation("Licence");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLocoObjectPack", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLicence", "Licence")
                        .WithMany()
                        .HasForeignKey("LicenceId");

                    b.Navigation("Licence");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblSC5File", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLicence", "Licence")
                        .WithMany()
                        .HasForeignKey("LicenceId");

                    b.Navigation("Licence");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblSC5FilePack", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLicence", "Licence")
                        .WithMany()
                        .HasForeignKey("LicenceId");

                    b.Navigation("Licence");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblTag", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLocoObject", null)
                        .WithMany("Tags")
                        .HasForeignKey("TblLocoObjectId");

                    b.HasOne("OpenLoco.Definitions.Database.TblLocoObjectPack", null)
                        .WithMany("Tags")
                        .HasForeignKey("TblLocoObjectPackId");

                    b.HasOne("OpenLoco.Definitions.Database.TblSC5File", null)
                        .WithMany("Tags")
                        .HasForeignKey("TblSC5FileId");

                    b.HasOne("OpenLoco.Definitions.Database.TblSC5FilePack", null)
                        .WithMany("Tags")
                        .HasForeignKey("TblSC5FilePackId");
                });

            modelBuilder.Entity("TblLocoObjectTblLocoObjectPack", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblLocoObjectPack", null)
                        .WithMany()
                        .HasForeignKey("ObjectPacksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenLoco.Definitions.Database.TblLocoObject", null)
                        .WithMany()
                        .HasForeignKey("ObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TblSC5FileTblSC5FilePack", b =>
                {
                    b.HasOne("OpenLoco.Definitions.Database.TblSC5FilePack", null)
                        .WithMany()
                        .HasForeignKey("SC5FilePacksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenLoco.Definitions.Database.TblSC5File", null)
                        .WithMany()
                        .HasForeignKey("SC5FilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLocoObject", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblLocoObjectPack", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblSC5File", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("OpenLoco.Definitions.Database.TblSC5FilePack", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}

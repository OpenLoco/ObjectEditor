<UserControl
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:vm="using:OpenLoco.Gui.ViewModels"
	xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
	xmlns:pgc="clr-namespace:Avalonia.PropertyGrid.Controls;assembly=Avalonia.PropertyGrid"
	xmlns:amxc="using:Avalonia.Markup.Xaml.Converters"
	xmlns:paz="using:Avalonia.Controls.PanAndZoom"
	mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="900"
	x:Class="OpenLoco.Gui.Views.ImageTableView"
	x:DataType="vm:ImageTableViewModel">

	<UserControl.Resources>
		<amxc:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
	</UserControl.Resources>

	<DockPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
			<Button Command="{Binding ImportImagesCommand}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Import a directory of .pngs">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="FolderUpload" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Import</TextBlock>
				</DockPanel>
			</Button>
			<Button Command="{Binding ExportImagesCommand}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Export all images as .pngs to a directory">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="FolderDownload" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Export</TextBlock>
				</DockPanel>
			</Button>
			<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Background colour">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Background colour</TextBlock>
				</DockPanel>
				<Button.Flyout >
					<Flyout>
						<ColorView Name="ImageBackgroundColorView" Palette="" Color="SteelBlue" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
					</Flyout>
				</Button.Flyout>
			</Button>
			<ComboBox ItemsSource="{Binding ColourSwatchesArr}" SelectedItem="{Binding SelectedPrimarySwatch}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Primary remap swatch" />
			<ComboBox ItemsSource="{Binding ColourSwatchesArr}" SelectedItem="{Binding SelectedSecondarySwatch}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Secondary remap swatch" />
			<Button Command="{Binding CropAllImagesCommand}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Crops all images and adjusts offsets">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="Crop" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Crop all</TextBlock>
				</DockPanel>
			</Button>
		</StackPanel>
		<Grid ColumnDefinitions="*, Auto, 384">
			<ScrollViewer Margin="2">
				<DockPanel>
					<Panel Width="12" DockPanel.Dock="Right"></Panel>
					<ListBox ItemsSource="{Binding Bitmaps}" SelectionMode="Multiple" Selection="{Binding SelectionModel}" Background="{Binding #ImageBackgroundColorView.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}">
						<ListBox.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel/>
							</ItemsPanelTemplate>
						</ListBox.ItemsPanel>
						<ListBox.ItemTemplate>
							<DataTemplate>
								<Image Source="{Binding}" Stretch="None" Margin="0">
									<Image.ContextMenu>
										<ContextMenu>
											<MenuItem Header="Replace image" Command="{Binding $parent[ListBox].((vm:ImageTableViewModel)DataContext).ReplaceImageCommand}"/>
										</ContextMenu>
									</Image.ContextMenu>
								</Image>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</DockPanel>
			</ScrollViewer>
			<GridSplitter Grid.Column="1" />
			<DockPanel Grid.Column="2">
				<StackPanel Margin="2" Orientation="Vertical" MaxHeight="512" DockPanel.Dock="Top">
					<StackPanel Orientation="Horizontal">
						<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Select preview background colour">
							<DockPanel>
								<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
								<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Background</TextBlock>
							</DockPanel>
							<Button.Flyout >
								<Flyout>
									<ColorView Name="ImageColorViewPreviewBackground" Palette="" Color="SteelBlue" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
								</Flyout>
							</Button.Flyout>
						</Button>
						<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Select border preview colour">
							<DockPanel>
								<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
								<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Border</TextBlock>
							</DockPanel>
							<Button.Flyout >
								<Flyout>
									<ColorView Name="ImageColorViewBorder" Palette="" Color="Gold" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
								</Flyout>
							</Button.Flyout>
						</Button>
						<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Select origin point colour">
							<DockPanel>
								<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
								<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Origin</TextBlock>
							</DockPanel>
							<Button.Flyout >
								<Flyout>
									<ColorView Name="ImageColorViewOriginPoint" Palette="" Color="Red" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
								</Flyout>
							</Button.Flyout>
						</Button>
					</StackPanel>
					<paz:ZoomBorder Name="ZoomBorder" MinWidth="256" MinHeight="256" Stretch="Uniform" ZoomSpeed="1.2" MinZoomX="0.5" MaxZoomX="30" MinZoomY="0.5" MaxZoomY="30" ClipToBounds="True" Focusable="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" PanButton="Left"  Background="{Binding #ImageColorViewPreviewBackground.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}" >
						<Canvas Width="{Binding SelectedG1ElementSize.Width}" Height="{Binding SelectedG1ElementSize.Height}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Gray">
							<!--Bounding box-->
							<Rectangle Canvas.Top="-1" Canvas.Left="-1" StrokeThickness="1.0" Width="{Binding SelectedBitmapPreviewBorder.Width}" Height="{Binding SelectedBitmapPreviewBorder.Height}" Opacity="1.0" Fill="{Binding #ImageColorViewPreviewBackground.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}" Stroke="{Binding #ImageColorViewBorder.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}"  />
							<!--Image-->
							<Image Name="AnimationPreviewPP" Source="{Binding SelectedBitmapPreview}" RenderOptions.BitmapInterpolationMode="None" Stretch="None"/>
							<!--Origin point-->
							<Rectangle Canvas.Left="{Binding SelectedG1ElementOffset.X}" Canvas.Top="{Binding SelectedG1ElementOffset.Y}" Width="1" Height="1" Opacity="1.0" Fill="{Binding #ImageColorViewOriginPoint.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}" />
						</Canvas>
					</paz:ZoomBorder>
					<TextBlock HorizontalAlignment="Center" Text="{Binding #ZoomBorder.ZoomX, StringFormat='Zoom: {0:F2}x | \'R\' to reset'}"></TextBlock>
					<!--<Slider Minimum="1" Maximum="10" Value="{Binding ZoomBorder.ZoomX}" />-->
					<TextBlock Margin="0, 16, 0, 0" HorizontalAlignment="Center" Text="{Binding AnimationSpeed, StringFormat='Animation FPS: {0}'}"></TextBlock>
					<Slider Minimum="1" Maximum="80" Value="{Binding AnimationSpeed}" />
				</StackPanel>
				<ContentControl Content="{Binding SelectedG1Element}"></ContentControl>
			</DockPanel>
		</Grid>
	</DockPanel>
</UserControl>

<UserControl
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
	xmlns:pgc="clr-namespace:Avalonia.PropertyGrid.Controls;assembly=Avalonia.PropertyGrid"
	xmlns:amxc="using:Avalonia.Markup.Xaml.Converters"
	xmlns:paz="using:Avalonia.Controls.PanAndZoom"
	xmlns:vi="using:Gui.Views"
	xmlns:cnv="using:Gui.Converters"
	xmlns:vmg="using:Gui.ViewModels.Graphics"
	xmlns:vmlt="using:Gui.ViewModels.LocoTypes"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d"
	d:DesignWidth="1200"
	d:DesignHeight="900"
	x:Class="Gui.Views.ImageTableView"
	x:DataType="vmg:ImageTableViewModel">

	<UserControl.Resources>
		<amxc:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
		<cnv:NegativeValueConverter x:Key="NegativeValueConverter"/>
		<cnv:ColourArrayToGradientStopsConverter x:Key="ColourArrayToGradientStopsConverter" />
	</UserControl.Resources>

	<DockPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
			<Button Command="{Binding ImportImagesCommand}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Import a directory of .pngs">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="FolderUpload" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Import</TextBlock>
				</DockPanel>
			</Button>
			<SplitButton Command="{Binding ExportImagesCommand}" CommandParameter="{x:False}" HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Export all images as .pngs to a directory, using the image table index as the filename">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="FolderDownload" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Export</TextBlock>
				</DockPanel>
				<SplitButton.Flyout>
					<MenuFlyout Placement="BottomEdgeAlignedRight">
						<MenuItem Header="Export with image and group names" Command="{Binding ExportImagesCommand}" CommandParameter="{x:True}" ToolTip.Tip="Export all images as .pngs to a directory, using the image and group names as the filename" />
					</MenuFlyout>
				</SplitButton.Flyout>
			</SplitButton>
			<Button Content="Colours" HorizontalAlignment="Stretch" Margin="2" Padding="2" >
				<DockPanel>
					<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Colours</TextBlock>
				</DockPanel>
				<Button.Styles>
					<Style Selector="FlyoutPresenter">
						<Setter Property="Padding" Value="0" />
					</Style>
				</Button.Styles>
				<Button.Flyout>
					<Flyout>
						<ItemsControl Margin="0" Padding="0">
							<Button HorizontalAlignment="Stretch" ToolTip.Tip="Background colour">
								<DockPanel>
									<materialIcons:MaterialIcon Kind="PaletteOutline" Width="24" Height="24" Margin="2" />
									<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Background colour</TextBlock>
								</DockPanel>
								<Button.Flyout>
									<Flyout>
										<ColorView Name="ImageBackgroundColorView" Palette="" Color="SteelBlue" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
									</Flyout>
								</Button.Flyout>
							</Button>
							<ComboBox ItemsSource="{Binding ColourSwatches}" SelectedItem="{Binding SelectedPrimarySwatch}" HorizontalAlignment="Stretch" ToolTip.Tip="Primary remap swatch">
								<ComboBox.Styles>
									<Style Selector="FlyoutPresenter">
										<Setter Property="Margin" Value="0" />
										<Setter Property="Padding" Value="0" />
									</Style>
								</ComboBox.Styles>
								<ComboBox.ItemContainerTheme>
									<ControlTheme TargetType="ComboBoxItem">
										<Setter Property="Padding" Value="0" />
										<Setter Property="Margin" Value="0" />
									</ControlTheme>
								</ComboBox.ItemContainerTheme>
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<Border Margin="0">
											<Border.Background>
												<LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
													<LinearGradientBrush.GradientStops>
														<Binding Path="GradientColours">
															<Binding.Converter>
																<cnv:ColourArrayToGradientStopsConverter />
															</Binding.Converter>
														</Binding>
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Border.Background>
											<TextBlock Text="{Binding Swatch}" Margin="5" VerticalAlignment="Center"/>
										</Border>
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>
							<ComboBox ItemsSource="{Binding ColourSwatches}" SelectedItem="{Binding SelectedSecondarySwatch}" HorizontalAlignment="Stretch" ToolTip.Tip="Secondary remap swatch">
								<ComboBox.Styles>
									<Style Selector="FlyoutPresenter">
										<Setter Property="Margin" Value="0" />
										<Setter Property="Padding" Value="0" />
									</Style>
								</ComboBox.Styles>
								<ComboBox.ItemContainerTheme>
									<ControlTheme TargetType="ComboBoxItem">
										<Setter Property="Padding" Value="0" />
										<Setter Property="Margin" Value="0" />
									</ControlTheme>
								</ComboBox.ItemContainerTheme>
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<Border Margin="0">
											<Border.Background>
												<LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
													<LinearGradientBrush.GradientStops>
														<Binding Path="GradientColours">
															<Binding.Converter>
																<cnv:ColourArrayToGradientStopsConverter />
															</Binding.Converter>
														</Binding>
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Border.Background>
											<TextBlock Text="{Binding Swatch}" Margin="5" VerticalAlignment="Center"/>
										</Border>
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>
						</ItemsControl>
					</Flyout>
				</Button.Flyout>
			</Button>
			<Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="2" Padding="2" Content="Bulk editing" ToolTip.Tip="Bulk image editing options">
				<DockPanel>
					<materialIcons:MaterialIcon Kind="FolderEdit" Width="24" Height="24" Margin="2" />
					<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Bulk editing</TextBlock>
				</DockPanel>
				<Button.Styles>
					<Style Selector="FlyoutPresenter">
						<Setter Property="Padding" Value="0" />
					</Style>
				</Button.Styles>
				<Button.Flyout>
					<Flyout>
						<ItemsControl Margin="0" Padding="4">
							<Button Command="{Binding CropAllImagesCommand}" HorizontalAlignment="Stretch" ToolTip.Tip="Crops all images and adjusts offsets">
								<DockPanel>
									<materialIcons:MaterialIcon Kind="Crop" Width="24" Height="24" Margin="2" />
									<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Crop</TextBlock>
								</DockPanel>
							</Button>
							<StackPanel Orientation="Vertical">
								<TextBlock>
									Offsets
								</TextBlock>
								<Grid ColumnDefinitions="50*, 50*" RowDefinitions="33*, 33*, 33*">
									<Button Grid.Row="0" Grid.Column="0" Command="{Binding ZeroOffsetAllImagesCommand}" HorizontalAlignment="Stretch" ToolTip.Tip="Sets all image offsets to 0">
										<DockPanel>
											<materialIcons:MaterialIcon Kind="PanTopLeft" Width="24" Height="24" Margin="2" />
											<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Zero</TextBlock>
										</DockPanel>
									</Button>
									<Button Grid.Row="0" Grid.Column="1" Command="{Binding CenterOffsetAllImagesCommand}" HorizontalAlignment="Stretch" ToolTip.Tip="Sets all image offsets to the centre of the image">
										<DockPanel>
											<materialIcons:MaterialIcon Kind="Pan" Width="24" Height="24" Margin="2" />
											<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Center</TextBlock>
										</DockPanel>
									</Button>
									<Button Grid.Row="1" Grid.Column="0" Command="{Binding TranslateXOffsetAllImagesCommand}" CommandParameter="-1" HorizontalAlignment="Stretch" ToolTip.Tip="Sets all image offsets to the centre of the image">
										<DockPanel>
											<materialIcons:MaterialIcon Kind="ArrowLeft" Width="24" Height="24" Margin="2" />
											<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">X--</TextBlock>
										</DockPanel>
									</Button>
									<Button Grid.Row="1" Grid.Column="1" Command="{Binding TranslateXOffsetAllImagesCommand}" CommandParameter="1" HorizontalAlignment="Stretch" ToolTip.Tip="Sets all image offsets to the centre of the image">
										<DockPanel>
											<materialIcons:MaterialIcon Kind="ArrowRight" Width="24" Height="24" Margin="2" />
											<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">X++</TextBlock>
										</DockPanel>
									</Button>
									<Button Grid.Row="2" Grid.Column="0" Command="{Binding TranslateYOffsetAllImagesCommand}" CommandParameter="-1" HorizontalAlignment="Stretch" ToolTip.Tip="Sets all image offsets to the centre of the image">
										<DockPanel>
											<materialIcons:MaterialIcon Kind="ArrowUp" Width="24" Height="24" Margin="2" />
											<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Y--</TextBlock>
										</DockPanel>
									</Button>
									<Button Grid.Row="2" Grid.Column="1" Command="{Binding TranslateYOffsetAllImagesCommand}" CommandParameter="1" HorizontalAlignment="Stretch" ToolTip.Tip="Sets all image offsets to the centre of the image">
										<DockPanel>
											<materialIcons:MaterialIcon Kind="ArrowDown" Width="24" Height="24" Margin="2" />
											<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Y++</TextBlock>
										</DockPanel>
									</Button>
								</Grid>
							</StackPanel>
						</ItemsControl>
					</Flyout>
				</Button.Flyout>
			</Button>
		</StackPanel>
		<Grid ColumnDefinitions="*, Auto, 320">
			<ScrollViewer Margin="4">
				<DockPanel>
					<Panel Width="16" DockPanel.Dock="Right"></Panel>
					<ItemsControl ItemsSource="{Binding GroupedImageViewModels}" Margin="4">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Expander Header="{Binding GroupName}" IsExpanded="True" Margin="4" Padding="0" HorizontalAlignment="Stretch">
									<ListBox ItemsSource="{Binding Images}" SelectionMode="Multiple" Selection="{Binding SelectionModel}" Background="{Binding #ImageBackgroundColorView.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}">
										<!--<ListBox.ContextMenu>
											<ContextMenu>
												<MenuItem Header="Append new image" Command="{Binding $parent[Grid].((vmg:ImageTableViewModel)DataContext).AppendImageCommand}" CommandParameter="{Binding GroupName}"/>
											</ContextMenu>
										</ListBox.ContextMenu>-->
										<ListBox.ItemsPanel>
											<ItemsPanelTemplate>
												<WrapPanel/>
											</ItemsPanelTemplate>
										</ListBox.ItemsPanel>
										<ListBox.ItemTemplate>
											<DataTemplate>
												<Image Source="{Binding DisplayedImage}" Stretch="None" Margin="0">
													<Image.ContextMenu>
														<ContextMenu>
															<MenuItem Header="Replace" Command="{Binding $parent[Grid].((vmg:ImageTableViewModel)DataContext).ReplaceImageCommand}"/>
															<MenuItem Header="Crop" Command="{Binding $parent[Grid].((vmg:ImageTableViewModel)DataContext).CropImageCommand}"/>
															<MenuItem Header="Delete" Command="{Binding $parent[Grid].((vmg:ImageTableViewModel)DataContext).DeleteImageCommand}"/>
															<MenuItem Header="Insert before" Command="{Binding $parent[Grid].((vmg:ImageTableViewModel)DataContext).InsertImageAtCommand}" CommandParameter="{x:True}"/>
															<MenuItem Header="Insert after" Command="{Binding $parent[Grid].((vmg:ImageTableViewModel)DataContext).InsertImageAtCommand}" CommandParameter="{x:False}"/>
														</ContextMenu>
													</Image.ContextMenu>
												</Image>
											</DataTemplate>
										</ListBox.ItemTemplate>
									</ListBox>
								</Expander>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</DockPanel>
			</ScrollViewer>
			<GridSplitter Grid.Column="1" />
			<DockPanel Grid.Column="2">
				<StackPanel Margin="2" Orientation="Vertical" MaxHeight="512" DockPanel.Dock="Top">
					<TextBlock Margin="0, 16, 0, 0" HorizontalAlignment="Center" Text="{Binding AnimationSpeed, StringFormat='Animation FPS: {0}'}"></TextBlock>
					<Slider Minimum="1" Maximum="80" Value="{Binding AnimationSpeed}" />
					<StackPanel Orientation="Horizontal">
						<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Select preview background colour">
							<DockPanel>
								<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
								<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Background</TextBlock>
							</DockPanel>
							<Button.Flyout >
								<Flyout>
									<ColorView Name="ImageColorViewPreviewBackground" Palette="" Color="SteelBlue" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
								</Flyout>
							</Button.Flyout>
						</Button>
						<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Select border preview colour">
							<DockPanel>
								<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
								<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Border</TextBlock>
							</DockPanel>
							<Button.Flyout >
								<Flyout>
									<ColorView Name="ImageColorViewBorder" Palette="" Color="Gold" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
								</Flyout>
							</Button.Flyout>
						</Button>
						<Button HorizontalAlignment="Stretch" Margin="2" Padding="2" ToolTip.Tip="Select origin point colour">
							<DockPanel>
								<materialIcons:MaterialIcon Kind="Palette" Width="24" Height="24" Margin="2" />
								<TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4">Origin</TextBlock>
							</DockPanel>
							<Button.Flyout >
								<Flyout>
									<ColorView Name="ImageColorViewOriginPoint" Palette="" Color="Red" IsColorModelVisible="False" IsColorSpectrumVisible="False" IsColorComponentsVisible="False" />
								</Flyout>
							</Button.Flyout>
						</Button>
					</StackPanel>
					<paz:ZoomBorder Name="ZoomBorder" MinWidth="256" MinHeight="256" Stretch="None" ZoomSpeed="2.0" MinZoomX="0.5" MaxZoomX="64" MinZoomY="0.5" MaxZoomY="64" ClipToBounds="True" Focusable="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" PanButton="Left" Background="Gray">
						<!-- Image list -->
						<Canvas HorizontalAlignment="Center" VerticalAlignment="Center" Background="Gray">
							<!--Bounding box-->
							<Rectangle Canvas.Left="{Binding SelectedImage.SelectedBitmapPreviewBorder.X}" Canvas.Top="{Binding SelectedImage.SelectedBitmapPreviewBorder.Y}"  StrokeThickness="1.0" Width="{Binding SelectedImage.SelectedBitmapPreviewBorder.Width}" Height="{Binding SelectedImage.SelectedBitmapPreviewBorder.Height}" Opacity="1.0" Fill="{Binding #ImageColorViewPreviewBackground.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}" Stroke="{Binding #ImageColorViewBorder.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}" />
							<!--Image-->
							<Image Canvas.Left="{Binding SelectedImage.XOffset}" Canvas.Top="{Binding SelectedImage.YOffset}" Source="{Binding SelectedImage.DisplayedImage}" RenderOptions.BitmapInterpolationMode="None" Stretch="None"/>
							<!--Origin point-->
							<Rectangle Canvas.Left="0" Canvas.Top="0" Width="1" Height="1" Opacity="1.0" Fill="{Binding #ImageColorViewOriginPoint.Color, ConverterParameter={x:Static Brushes.Transparent}, Converter={StaticResource ColorToBrushConverter}}" />
						</Canvas>
					</paz:ZoomBorder>
					<TextBlock HorizontalAlignment="Center" Text="{Binding #ZoomBorder.ZoomX, StringFormat='Zoom: {0:F2}x | \'R\' to reset'}"></TextBlock>
				</StackPanel>
				<!--<ContentControl Content="{Binding BuildingComponents}" />-->
				<ContentControl Content="{Binding SelectedImage}" />
			</DockPanel>
		</Grid>
	</DockPanel>
</UserControl>
